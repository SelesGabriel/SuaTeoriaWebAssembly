@inject IJSRuntime js
@inject HttpClient http
@inject Blazored.SessionStorage.ISessionStorageService session
@inject NavigationManager nav

@*NAVIGATION MENU*@
@*<nav class="navbar navbar-expand-lg navbar-dark bg-black">
    <div class=container>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarText" aria-controls="navbarText" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <div class="col-2 col-lg-2 col-md-2">
                <ul class="navbar-nav mr-auto">
                    <li class="">
                        <NavLink class="nav-link" href="">
                            <img src="images/Logo.png" class="logo" />
                        </NavLink>
                    </li>
                </ul>
            </div>
            <div class="col-8 col-lg-8 col-md-8"

            >
                <ul class="navbar-nav mr-auto">
                    <li class="nav-item">
                        <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                            <span aria-hidden="true"></span> HOME
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link" href="mangas">
                            <span aria-hidden="true"></span> ANIMES/MANGÁS
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link" href="series">
                            <span aria-hidden="true"></span> SÉRIES
                        </NavLink>
                    </li>

                    <li class="nav-item">
                        <NavLink class="nav-link" href="filmes">
                            <span aria-hidden="true"></span> FILMES
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link" href="hqs">
                            <span aria-hidden="true"></span> HQs
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link" href="suateoria">
                            <span aria-hidden="false"></span> SUA TEORIA
                        </NavLink>
                    </li>
                    @if (userInfo.Id == 1)
                    {
                        <li class="nav-item">
                            <NavLink class="nav-link" href="painel">
                                <span aria-hidden="false"></span> PAINEL
                            </NavLink>
                        </li>
                    }
                </ul>
            </div>
        </div>

    </div>
</nav>*@

<nav class="navbar navbar-expand-lg navbar-dark bg-black">
    <a class="navbar-brand" href=""><img src="images/Logo.png" class="logo" /></a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarText" aria-controls="navbarText" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarText" data-toggle="collapse" data-target="#navbarText" aria-controls="navbarText" aria-expanded="false" aria-label="Toggle navigation">
        <ul class="navbar-nav mr-auto">
            <li class="nav-item">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span aria-hidden="true"></span> HOME
                </NavLink>
            </li>
            <li class="nav-item">
                <NavLink class="nav-link" href="mangas">
                    <span aria-hidden="true"></span> ANIMES / MANGÁS
                </NavLink>
            </li>
            <li class="nav-item">
                <NavLink class="nav-link" href="series">
                    <span aria-hidden="true"></span> SÉRIES
                </NavLink>
            </li>

            <li class="nav-item">
                <NavLink class="nav-link" href="filmes">
                    <span aria-hidden="true"></span> FILMES
                </NavLink>
            </li>
            <li class="nav-item">
                <NavLink class="nav-link" href="hqs">
                    <span aria-hidden="true"></span> ANIMAÇÃO / HQs
                </NavLink>
            </li>
            <li class="nav-item">
                <NavLink class="nav-link" href="suateoria">
                    <span aria-hidden="false"></span> SUA TEORIA
                </NavLink>
            </li>
            @if (userInfo.Id == 1)
            {
                <li class="nav-item">
                    <NavLink class="nav-link" href="painel-selesgabriel-adm">
                        <span aria-hidden="false"></span> PAINEL
                    </NavLink>
                </li>
            }
        </ul>
        @*Usuario*@
        <div class="col-2 col-lg-2 col-md-2">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item dropdown">
                    @if (!isAnonimo)
                    {
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <span class="fa fa-user"></span>
                            <label>Olá, @userInfo.User</label>
                        </a>
                        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                            <a class="dropdown-item text-black" style="cursor:pointer" href="perfil">Meu Perfil</a>
                            <div class="dropdown-divider"></div>
                            <a class="dropdown-item text-black" style="cursor:pointer" @onclick="ClearSession">Sair</a>

                        </div>
                    }
                    else
                    {

                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <span class="fa fa-user"></span>
                        </a>
                        <div class="dropdown-menu" aria-labelledby="navbarDropdown">

                            <a class="dropdown-item text-black" href="" data-toggle="modal" data-target="#modalEntrar">Entrar</a>
                            <div class="dropdown-divider"></div>
                            <a class="dropdown-item text-black" href="" data-toggle="modal" data-target="#modalCriar">Cadastrar</a>

                        </div>
                    }
                </li>
            </ul>
        </div>
        @*Usuario FIM*@
    </div>
</nav>
@*FIM MENU NAV*@


@*------------------------------------------------------------------------------------------------------------------------------------*@



@*MODAL PARA ENTRAR*@
<SuaTeoriaWebAssembly.Pages.Login.Login></SuaTeoriaWebAssembly.Pages.Login.Login>
@*FIM MODAL*@

@*----------------------------------------------------------------------------------------------------------------------*@


@*MODAL PARA CRIAR CONTA*@
<EditForm Model="@usuario" OnValidSubmit="@PostUsuario">
    <DataAnnotationsValidator />
    <div class="modal fade" id="modalCriar" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Cadastrar</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="form-group">
                            <label for="nomeCriacao" class="col-form-label">Nome *</label>
                            <InputText @bind-Value="@usuario.Nome" type="text" class="form-control" id="nomeCriacao" placeholder="Nome Completo"></InputText>
                            <ValidationMessage For="()=>usuario.Nome" />
                        </div>
                        <div class="form-group">
                            <label for="usuarioCriacao" class="col-form-label">Usuário *</label>
                            <InputText @bind-Value="usuario.User" type="text" class="form-control" id="usuarioCriacao" placeholder="Usuário"></InputText>
                            <ValidationMessage For="()=>usuario.User" />
                        </div>
                        <div class="form-group">
                            <label for="usuarioCriacao" class="col-form-label">Email *</label>
                            <InputText @bind-Value="usuario.Email" type="text" class="form-control" id="emailCriacao" placeholder="Email"></InputText>
                            <ValidationMessage For="()=>usuario.Email" />
                        </div>
                        <div class="form-group">
                            <label for="senhaCriacao" class="col-form-label">Senha *</label>
                            <InputText @bind-Value="usuario.Senha" type="@password" class="form-control" id="senhaCriacao" placeholder="Senha"></InputText>
                            <ValidationMessage For="()=>usuario.Senha" />
                        </div>
                        <div class="form-group">
                            <label for="rptSenhaCriacao" class="col-form-label">Repita a Senha *</label>
                            <input @bind-value="repetirSenha" type="@password" class="form-control" id="rptSenhaCriacao" placeholder="Repetir Senha">
                        </div>
                        <label>Mostrar Senha</label> <input type="checkbox" @bind-value="@mostrarSenha" @onclick="MostrarSenha" />
                        @if (!validaSenha)
                        {
                            <br />

                            <label style="color:red">As senhas devem ser iguais.</label>
                        }
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary @Disabled">Cadastrar</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Fechar</button>
                </div>
            </div>
        </div>
    </div>
</EditForm>
@*FIM MODAL*@

@code {
    string password = "password";
    bool mostrarSenha = false;
    bool validaSenha = true;
    string repetirSenha;
    public string Disabled = "";
    string errorMessage = "";

    Usuario usuario = new();
    string baseUrl = Configuration.BaseUrl;
    async Task PostUsuario()
    {
        try
        {
            Disabled = "disabled";

            if (string.IsNullOrEmpty(usuario.Nome))
            {
                errorMessage = "Campo Nome não pode ficar vazio";
                Disabled = "";
            }
            else if (string.IsNullOrEmpty(usuario.User))
            {
                errorMessage = "Campo User não pode ficar vazio";
                Disabled = "";
            }
            else if (string.IsNullOrEmpty(usuario.Senha))
            {
                errorMessage = "Campo senha não pode ficar vazio";
                Disabled = "";
            }
            else
            {
                errorMessage = "";
                Disabled = "";
            }
            if (usuario.Senha != repetirSenha)
            {
                validaSenha = false;
                Disabled = "";
            }
            else
            {
                validaSenha = true;
                Disabled = "";
            }
            if (validaSenha && string.IsNullOrEmpty(errorMessage))
            {

                var result = await http.PostAsJsonAsync<Usuario>($"{baseUrl}/usuarios", usuario);
                if (result.StatusCode != System.Net.HttpStatusCode.OK)
                {
                    await js.InvokeVoidAsync("alert", $"Não foi possível completar o cadastro, Usuario já existe");
                    Disabled = "";
                }
                else
                {
                    await js.InvokeVoidAsync("alert", "Cadastado com sucesso");
                    Disabled = "";
                    nav.NavigateTo("", true);
                }
            }
        }
        catch (Exception ex)
        {
            js.InvokeVoidAsync("alert", ex.Message);
            nav.NavigateTo("", true);
        }

    }

    protected override async Task OnInitializedAsync()
    {
        await GetSessionUser();
    }

    bool isAnonimo = false;
    Usuario userInfo = new();
    Usuario userAnonimo = new() { Id = 0, Nome = "Anonimous" };
    public async Task GetSessionUser()
    {
        userInfo = await session.GetItemAsync<Usuario>("SessionUser");

        if (userInfo == null || userInfo.Id == 0)
        {
            userInfo = userAnonimo;
            await session.SetItemAsync("SessionUser", userInfo);
            isAnonimo = true;
        }
    }

    public void ClearSession()
    {
        isAnonimo = true;
        session.ClearAsync();
        userInfo = new Usuario() { Id = 0, Nome = "Anonimous" };
        nav.NavigateTo("", true);
    }

    #region Toggle

    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "hide" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    #endregion

    public async Task MostrarSenha()
    {
        mostrarSenha = !mostrarSenha;
        if (mostrarSenha)
        {
            password = "text";
        }
        else
            password = "password";
    }

}