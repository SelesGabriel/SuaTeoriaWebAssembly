@page "/series"
@*idCategoria = 3*@
@inject HttpClient http
@inject Blazored.SessionStorage.ISessionStorageService session

<div class="container">
    <div class="row">
        <div class="col-lg-8 col-md-7 col-sm-6">
            <div class="container">
                <h2 class="fontePadrao" style="color:white;">AS MAIS RECENTES</h2>
                <div class="dropdown-divider"></div>
                <nav aria-label="Page navigation example">


                </nav>
                <div class="row">
                    @foreach (var item in Teorias)
                    {
                        <div class="col-lg-6 col-md-12 py-5" id="divTeoria">
                            <a href="visualizarteoria/@item.Id" title="">
                                <img src="@item.ImagemTitulo" id="imagemInicio" style="border-radius:10px" />
                                <p style="color:#d3d3d3">@item.Titulo</p>
                            </a>
                        </div>
                    }
                    <div class="dropdown-divider"></div>
                    <nav aria-label="Page navigation example">

                        <div class="my-4">

                            @if (Teorias != null)
                            {
                                if (skip != 0)
                                {
                                    <a class="btn btn-dark" style="cursor:default" @onclick="PaginationPrevious">Anterior</a>

                                }
                                if (skip == 0 || Teorias.Count() == 6)
                                {
                                    <a class="btn btn-dark" style="cursor:default" @onclick="PaginationNext">Próximo</a>

                                }
                            }
                        </div>
                    </nav>
                </div>
            </div>
        </div>
        <div class="col-lg-4 col-md-5 col-sm-6">
            <div class="container">
                <h4 class="fontePadrao" style="color:#d3d3d3;">MAIS FALADAS</h4>

                @for (var o = 0; o < ObrasMaisFaladas.Count; o++)
                {
                    if (ObrasMaisFaladas[o].Obra != null)
                    {

                        <div class="dropdown-divider"></div>
                        <div class="row py-2">
                            <div class="col-4"><a class="disabled"><img id="menuLateralImg" src="@ObrasMaisFaladas[o].Obra.ImagemObra" style="border-radius:10px" /></a></div>
                            <div class="col-6"><label style="text-decoration:none;color:#d3d3d3"> @ObrasMaisFaladas[o].Obra.Nome</label></div>
                        </div>
                    }
                }

                <h4 class="fontePadrao mt-5" style="color:#d3d3d3;">TOP TEORIAS</h4>
                @foreach (var t in TopTeorias)
                {
                    <div class="dropdown-divider"></div>
                    <div class="row py-2" style="overflow:hidden;max-height:10vh;">
                        <div class="col-4"><a href="visualizarteoria/@t.IdTeoria"><img id="menuLateralImg" src="@t.Teoria.ImagemTitulo" /></a></div>
                        <div class="col-6"><a title="@t.Teoria.Titulo" href="visualizarteoria/@t.IdTeoria" style="text-decoration:none;color:#d3d3d3">@t.Teoria.Titulo</a></div>
                    </div>
                }

                <h4 class="fontePadrao mt-5" style="color:#d3d3d3;">TOP TEORISTAS</h4>
                @foreach (var t in TopUsuarios)
                {
                    <div class="dropdown-divider"></div>
                    <div class="row">
                        @if (!String.IsNullOrEmpty(t.Usuario.Foto))
                        {
                            <div class="col-4"><a href="#"><img id="menuLateralImg" src="data:image/jpeg;base64, @t.Usuario.Foto" /></a></div>
                        }
                        else
                        {
                            <div class="col-4"><a href="#"><img id="menuLateralImg" src=images/user.png /></a></div>
                        }
                        <div class="col-6"><a href="#" style="text-decoration:none;color:#d3d3d3">@t.Usuario.User</a></div>
                    </div>
                }
            </div>
        </div>


    </div>


</div>

@code {
    public int IdCategoria { get; set; } = 3;
    Teoria? teoria = new();
    List<Teoria?>? Teorias = new();
    List<TopUsuario?>? TopUsuarios = new();
    List<ObraMaisFalada?>? ObrasMaisFaladas = new();
    List<TopTeoria?>? TopTeorias = new();
    string baseUrl = Configuration.BaseUrl;

    #region Pagination
    int skip;
    int take = 8;
    #endregion
    #region Class GetTop
    public class TopObra
    {
        public int IdObra { get; set; }
        public int Quantidade { get; set; }
        public string NomeObra { get; set; }
        public int IdCategoria { get; set; }
        public string ImagemObra { get; set; }
    }

    public class ObraMaisFalada
    {
        public Obra Obra { get; set; }
        public int Quantidade { get; set; }
    }

    public class TopTeoria
    {
        public int IdTeoria { get; set; }
        public int Quantidade { get; set; }
        public Teoria Teoria { get; set; }
    }
    #endregion



    //protected override async Task OnInitializedAsync()
    //{
    //    await GetTeorias();
    //    await GetObrasMaisFaladas();
    //    await GetTopTeorias();
    //    await GetTopUsuarios();
    //}
    protected override async Task OnInitializedAsync()
    {
        await GetTeorias();
        await GetObrasMaisFaladas();
        await GetTopTeorias();
        await GetTopUsuarios();
    }

    async Task GetTeorias()
    {
        skip = 0;
        Teorias = await http.GetFromJsonAsync<List<Teoria>>($"{baseUrl}/teorias?skip={skip}&take={take}&idCategoria={IdCategoria}");
    }

    async Task GetObrasMaisFaladas()
    {
        ObrasMaisFaladas = await http.GetFromJsonAsync<List<ObraMaisFalada>>($"{baseUrl}/obrasmaisfaladas?idCategoria={IdCategoria}");

    }

    async Task GetTopTeorias()
    {
        TopTeorias = await http.GetFromJsonAsync<List<TopTeoria>>($"{baseUrl}/topteorias?idCategoria={IdCategoria}");
    }

    async Task GetTopUsuarios()
    {
        TopUsuarios = await http.GetFromJsonAsync<List<TopUsuario>>($"{baseUrl}/topusuarios?idCategoria={IdCategoria}");
    }

    #region Pagination
    async Task PaginationPrevious()
    {
        if (skip == 8)
        {
            skip = 0;
        }
        else
        {
            skip = skip - 8;
        }
        if (Teorias != null)
            Teorias = await http.GetFromJsonAsync<List<Teoria>>($"{baseUrl}/teorias?skip={skip}&take={take}?idCategoria={IdCategoria}");
    }

    async Task PaginationNext()
    {
        if (skip == 0)
        {
            skip = 8;
        }
        else
        {
            skip = skip + 8;
        }
        if (Teorias != null)
            Teorias = await http.GetFromJsonAsync<List<Teoria>>($"{baseUrl}/teorias?skip={skip}&take={take}?idCategoria={IdCategoria}");
    }
    #endregion
}
