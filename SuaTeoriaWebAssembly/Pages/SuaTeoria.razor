@page "/suateoria"
@inject IJSRuntime js

<div class="container">
    <div class=row>
        <div class="col-sm-12 my-3">
            <input type="text" id=tituloTeoria placeholder="Digite o título da teoria..." />
        </div>
        <select placeholder="Selecione uma categoria" class="col-md-6 col-sm-12">
            <option></option>
            <option>Animes / Mangás</option>
            <option>Séries</option>
            <option>Filmes</option>
            <option>HQs</option>
        </select>
        <select id="select-state" placeholder="Selecione uma obra" class="col-md-6 col-sm-12">
            <option value="">Select a state...</option>
            <option value="AL">One Piece</option>
            <option value="AK">Bleach</option>
            <option value="AZ">Dragon Ball Super</option>
            <option value="AR">Dragon Ball Z</option>
            <option value="CA">Dragon Ball GT</option>
            <option value="CO">Boku no Hero (My Hero Academy)</option>
            <option value="CT">Kimetsu no Yaiba (Demon Slayer)</option>
            <option value="DE">Death Note</option>
            <option value="DC">Mirai Nikki</option>
            <option value="FL">Shingeki no Kyojin (Attack on Titan)</option>
            <option value="GA">Naruto (Classico)</option>
            <option value="HI">Naruto Shippuden</option>
            <option value="ID">Boruto</option>
            <option value="IL">Kuroko no Basket</option>
            <option value="IN">One Punch Man</option>
        </select>
    </div>
    <div class="my-3">
        <BlazorInputFile.InputFile OnChange="HandleFileSelect" style="display:none;" id="imagemTitulo"></BlazorInputFile.InputFile> 
        <label for="imagemTitulo" 
        style="background-color:#ccc;width:100%;
            border-radius:5px;cursor:pointer;padding:10px;text-align:center">
            Escolha uma imagem para ser capa da sua teoria &#187</label>
        @if (!String.IsNullOrEmpty(img64))
        {
            <img style="height:50%; width:100%;" src="data:image/jpeg;base64, @img64" />
        }
    </div>

    <div class="my-3">
        <CriaTextoTeoria></CriaTextoTeoria>
    </div>

</div>

<button @onclick="getHtml" class="btn-dark my-5">Salvar</button>
    



@code {
    IFileListEntry? file;
    string? img64;
    string errMessage = "";
    string mensagem = "Escolha uma imagem para ser capa da sua teoria";
    int count = 1;
    public string htmlText { get; set; } = "";
    string input = "<div class=\"drag-drop-zone\" b-zuc3isr0wf=\"\"><!--!--><input type=\"file\" _bl_2=\"\"></div>";
    string dragDropZone = "<div class=\"drag-drop-zone\" b-zuc3isr0wf=\"\"></div>";
    string largura = "<input class=\"tamanhoImagem\" type=\"number\" min=\"4\" max=\"100\" b-zuc3isr0wf=\"\">";
    string altura = "<input class=\"tamanhoImagem\" type=\"number\" min=\"4\" max=\"100\" b-zuc3isr0wf=\"\">";

    async Task HandleFileSelect(IFileListEntry[] files)
    {
        file = files.FirstOrDefault();
        if (file != null)
        {
            if (file.Size > 2000000)
            {
                errMessage = "Tamanho limite máximo da imagem: 2MB";
                await js.InvokeVoidAsync("alert", errMessage);
                return;
            }

        }
        await GetBase64File();
        StateHasChanged();
    }

    async Task GetBase64File()
    {
        byte[] bytes;
        var memoryStream = await file.ReadAllAsync();
        bytes = memoryStream.ToArray();
        img64 = Convert.ToBase64String(bytes);
        mensagem = "";
    }

    protected override async Task OnInitializedAsync()
    {
        await js.InvokeVoidAsync("teste");
    }

    async Task getHtml()
    {
        htmlText = await js.InvokeAsync<string>("getHtml");
        htmlText.Replace(input, "").Replace(dragDropZone, "").Replace(altura, "").Replace(largura, "");
        //Chamar API para salvar no banco.
    }

}